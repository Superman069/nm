function [root, iterations] = bisection(func, a, b, tol_abs, tol_rel, max_iter)

    if fa * fb > 0
        error('The Bisection method requires f(a) and f(b) to have opposite signs.');
    end

    % Bisection loop
    while iterations < max_iter
        % Bisection step
        c = (a + b) / 2;
        fc = func(c);

        % Check convergence criteria
        if abs(fc) < tol_abs || abs(b - a) < tol_rel * max(abs(b), 1)
            root = c;
            return;
        end

        % Update interval
        if fa * fc < 0
            b = c;
            fb = fc;
        else
            a = c;
            fa = fc;
        end

        iterations = iterations + 1;
    end

    % Maximum iterations reached without convergence
    error('Bisection method did not converge within the maximum number of iterations.');
end

